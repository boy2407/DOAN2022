<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnIn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>